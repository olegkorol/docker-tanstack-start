import{isRedirect as O,isNotFound as F}from"@tanstack/react-router";import{AsyncLocalStorage as z}from"node:async_hooks";import{H3Event as E,getRequestURL as M,getRequestWebStream as U,getResponseStatus as W,eventHandler as J}from"h3";var B="Invariant failed";function K(e,t){if(!e)throw new Error(B)}function V(e={}){let t,n=!1;const r=s=>{if(t&&t!==s)throw new Error("Context conflict")};let o;if(e.asyncContext){const s=e.AsyncLocalStorage||globalThis.AsyncLocalStorage;s?o=new s:console.warn("[unctx] `AsyncLocalStorage` is not provided.")}const a=()=>{if(o){const s=o.getStore();if(s!==void 0)return s}return t};return{use:()=>{const s=a();if(s===void 0)throw new Error("Context is not available");return s},tryUse:()=>a(),set:(s,c)=>{c||r(s),t=s,n=!0},unset:()=>{t=void 0,n=!1},call:(s,c)=>{r(s),t=s;try{return o?o.run(s,c):c()}finally{n||(t=void 0)}},async callAsync(s,c){t=s;const y=()=>{t=s},f=()=>t===s?y:void 0;q.add(f);try{const d=o?o.run(s,c):c();return n||(t=void 0),await d}finally{q.delete(f)}}}}function G(e={}){const t={};return{get(n,r={}){return t[n]||(t[n]=V({...e,...r})),t[n]}}}const S=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof global<"u"?global:typeof window<"u"?window:{},L="__unctx__",Q=S[L]||(S[L]=G()),X=(e,t={})=>Q.get(e,t),j="__unctx_async_handlers__",q=S[j]||(S[j]=new Set);function w(e){if(!N(e))return!1;const t=e.constructor;if(typeof t>"u")return!0;const n=t.prototype;return!(!N(n)||!n.hasOwnProperty("isPrototypeOf"))}function N(e){return Object.prototype.toString.call(e)==="[object Object]"}const l={stringify:e=>JSON.stringify(e,function(n,r){const o=this[n],a=_.find(s=>s.stringifyCondition(o));return a?a.stringify(o):r}),parse:e=>JSON.parse(e,function(n,r){const o=this[n];if(w(o)){const a=_.find(s=>s.parseCondition(o));if(a)return a.parse(o)}return r}),encode:e=>{if(Array.isArray(e))return e.map(n=>l.encode(n));if(w(e))return Object.fromEntries(Object.entries(e).map(([n,r])=>[n,l.encode(r)]));const t=_.find(n=>n.stringifyCondition(e));return t?t.stringify(e):e},decode:e=>{if(w(e)){const t=_.find(n=>n.parseCondition(e));if(t)return t.parse(e)}return Array.isArray(e)?e.map(t=>l.decode(t)):w(e)?Object.fromEntries(Object.entries(e).map(([t,n])=>[t,l.decode(n)])):e}},g=(e,t,n,r)=>({key:e,stringifyCondition:t,stringify:o=>({[`$${e}`]:n(o)}),parseCondition:o=>Object.hasOwn(o,`$${e}`),parse:o=>r(o[`$${e}`])}),_=[g("undefined",e=>e===void 0,()=>0,()=>{}),g("date",e=>e instanceof Date,e=>e.toISOString(),e=>new Date(e)),g("error",e=>e instanceof Error,e=>({...e,message:e.message,stack:void 0,cause:e.cause}),e=>Object.assign(new Error(e.message),e)),g("formData",e=>e instanceof FormData,e=>{const t={};return e.forEach((n,r)=>{const o=t[r];o!==void 0?Array.isArray(o)?o.push(n):t[r]=[o,n]:t[r]=n}),t},e=>{const t=new FormData;return Object.entries(e).forEach(([n,r])=>{Array.isArray(r)?r.forEach(o=>t.append(n,o)):t.append(n,r)}),t}),g("bigint",e=>typeof e=="bigint",e=>e.toString(),e=>BigInt(e))];function Y(e){let t;const n=D(e),r={duplex:"half",method:e.method,headers:e.headers};return e.node.req.body instanceof ArrayBuffer?new Request(n,{...r,body:e.node.req.body}):new Request(n,{...r,get body(){return t||(t=ne(e),t)}})}function Z(e){return e.web??(e.web={request:Y(e),url:D(e)}),e.web.request}function k(){return H()}const P=Symbol("$HTTPEvent");function ee(e){return typeof e=="object"&&(e instanceof E||e?.[P]instanceof E||e?.__is_event__===!0)}function R(e){return function(...t){var n;const r=t[0];if(ee(r))t[0]=r instanceof E||r.__is_event__?r:r[P];else{if(!((n=globalThis.app.config.server.experimental)!=null&&n.asyncContext))throw new Error("AsyncLocalStorage was not enabled. Use the `server.experimental.asyncContext: true` option in your app configuration to enable it. Or, pass the instance of HTTPEvent that you have as the first argument to the function.");t.unshift(k())}return e(...t)}}const D=R(M),te=R(W),ne=R(U);function re(){var e;return X("nitro-app",{asyncContext:!!((e=globalThis.app.config.server.experimental)!=null&&e.asyncContext),AsyncLocalStorage:z})}function H(){const e=re().use().event;if(!e)throw new Error("No HTTPEvent found in AsyncLocalStorage. Make sure you are using the function within the server runtime.");return e}const oe={"src_routes_demo_start_server-funcs_tsx--getCount_createServerFn_handler":{functionName:"getCount_createServerFn_handler",importer:()=>import("./demo.start.server-funcs-AMrb0Oaq.js")},"src_routes_demo_start_server-funcs_tsx--updateCount_createServerFn_handler":{functionName:"updateCount_createServerFn_handler",importer:()=>import("./demo.start.server-funcs-CoXrIZuF.js")}},le=J(se),v=oe;async function se(e){const t=Z(e);return await ae({request:t,event:e})}function ie(e){return e.replace(/^\/|\/$/g,"")}async function ae({request:e,event:t}){const n=new AbortController,r=n.signal,o=()=>n.abort();t.node.req.on("close",o);const a=e.method,s=new URL(e.url,"http://localhost:3000"),c=new RegExp(`${ie("/_server")}/([^/?#]+)`),y=s.pathname.match(c),f=y?y[1]:null,d=Object.fromEntries(s.searchParams.entries()),b="createServerFn"in d;if(typeof f!="string")throw new Error("Invalid server action param for serverFnId: "+f);const C=v[f];if(!C)throw console.log("serverFnManifest",v),new Error("Server function info not found for "+f);let h;if(h=await C.importer(),!h)throw console.log("serverFnManifest",v),new Error("Server function module not resolved for "+f);const p=h[C.functionName];if(!p)throw console.log("serverFnManifest",v),console.log("fnModule",h),new Error(`Server function module export not resolved for serverFn ID: ${f}`);const I=["multipart/form-data","application/x-www-form-urlencoded"],x=await(async()=>{try{let i=await(async()=>{if(e.headers.get("Content-Type")&&I.some(u=>{var A;return(A=e.headers.get("Content-Type"))==null?void 0:A.includes(u)}))return K(a.toLowerCase()!=="get","GET requests with FormData payloads are not supported"),await p(await e.formData(),r);if(a.toLowerCase()==="get"){let u=d;return b&&(u=d.payload),u=u&&l.parse(u),await p(u,r)}const m=await e.text(),T=l.parse(m);return b?await p(T,r):await p(...T,r)})();return i instanceof Response||!b&&(i=i.result,i instanceof Response)?i:O(i)||F(i)?$(i):new Response(i!==void 0?l.stringify(i):void 0,{status:te(H()),headers:{"Content-Type":"application/json"}})}catch(i){return i instanceof Response?i:O(i)||F(i)?$(i):(console.info(),console.info("Server Fn Error!"),console.info(),console.error(i),console.info(),new Response(l.stringify(i),{status:500,headers:{"Content-Type":"application/json"}}))}})();if(t.node.req.removeListener("close",o),x.headers.get("Content-Type")==="application/json"){const m=await x.clone().text();m&&JSON.stringify(JSON.parse(m))}return x}function $(e){const{headers:t,...n}=e;return new Response(JSON.stringify(n),{status:200,headers:{"Content-Type":"application/json",...t||{}}})}export{le as a,K as i,l as s};
